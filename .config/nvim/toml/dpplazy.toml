[[plugins]]
repo = 'Shougo/cmdline.vim'
on_source = ['ddu.vim']
hook_add = '''
  cnoremap <CR>  <Cmd>call cmdline#disable()<CR><CR>
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = ['BufRead', 'BufNewFile']
on_cmd = ['TSInstall', 'TSUpdate']
rev = 'main'
lua_source = '''
  require('plugins.treesitter').hook_source()
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'mason-org/mason.nvim'
depends = ['nvim-lspconfig']
lua_source = '''
  require('mason').setup()
'''

[[plugins]]
repo = 'mason-org/mason-lspconfig.nvim'
depends = ['mason.nvim', 'nvim-lspconfig']
on_event = ['BufReadPre', 'BufNewFile' ]
lua_source = '''
  local ensure_installed = {
    "lua_ls",
    "denols",
  }
  require('mason-lspconfig').setup({
    ensure_installed = ensure_installed,
  })

  require("core.lsp")
'''

[[plugins]]
repo = 'jay-babu/mason-null-ls.nvim'
depends = ['mason.nvim', 'none-ls.nvim']
on_event = [ "BufReadPre", "BufNewFile" ]
lua_source = '''
  local ensure_installed = {
    "stylua",
  }
  require('mason-null-ls').setup({
    ensure_installed = ensure_installed,
    handlers = {},
  })
'''

[[plugins]]
repo = 'nvimtools/none-ls.nvim'
depends = [ 'plenary.nvim' ]
lua_source = '''
  local null_ls = require('null-ls')

  null_ls.setup({
    sources = {
      null_ls.builtins.formatting.stylua,
    },
    on_attach = function(client, bufnr)
      if client.supports_method("textDocument/formatting") then
        vim.api.nvim_clear_autocmds({ group = augroup, buffer = bufnr })
        vim.api.nvim_create_autocmd("BufWritePre", {
          group = augroup,
          buffer = bufnr,
          callback = function()
            vim.lsp.buf.format({
              async = false,
              filter = function(c)
                return c.name == "null-ls"
              end,
            })
          end,
        })
      end
    end
  })
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_source = 'ddc.vim'
hook_source = '''
call signature_help#enable()
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'j-hui/fidget.nvim'
on_event = 'BufEnter'
lua_source = '''
  require("fidget").setup()
'''
